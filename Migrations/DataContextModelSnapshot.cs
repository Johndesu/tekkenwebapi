// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TekkenPortugal.WebApi.Data;

#nullable disable

namespace TekkenPortugal.WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticleCategory", b =>
            {
                b.Property<int>("ArticlesId")
                    .HasColumnType("int");

                b.Property<int>("CategoriesId")
                    .HasColumnType("int");

                b.HasKey("ArticlesId", "CategoriesId");

                b.HasIndex("CategoriesId");

                b.ToTable("ArticleCategory");
            });

            modelBuilder.Entity("ArticleTag", b =>
            {
                b.Property<int>("ArticlesId")
                    .HasColumnType("int");

                b.Property<int>("TagsId")
                    .HasColumnType("int");

                b.HasKey("ArticlesId", "TagsId");

                b.HasIndex("TagsId");

                b.ToTable("ArticleTag");
            });

            modelBuilder.Entity("TekkenPortugal.WebApi.Models.Domain.Article", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Content")
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Hero")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<bool>("IsPublished")
                    .HasColumnType("bit");

                b.Property<DateTime?>("LastUpdated")
                    .HasColumnType("datetime2");

                b.Property<DateTime?>("PublishedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Summary")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Thumbnail")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Title")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("UrlHandle")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Articles");
            });

            modelBuilder.Entity("TekkenPortugal.WebApi.Models.Domain.Category", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<DateTime?>("LastUpdated")
                    .HasColumnType("datetime2");

                b.Property<string>("UrlHandle")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Categories");
            });

            modelBuilder.Entity("TekkenPortugal.WebApi.Models.Domain.ImageMedia", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("DateCreated")
                    .HasColumnType("datetime2");

                b.Property<string>("FileExtenstion")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FileName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Url")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("ImagesMedia");
            });


            modelBuilder.Entity("TekkenPortugal.WebApi.Models.Domain.Platform", b =>
            {
                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Icon")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<DateTime?>("LastUpdated")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Platforms");
            });

            modelBuilder.Entity("TekkenPortugal.WebApi.Models.Domain.Tag", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<DateTime?>("LastUpdated")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Tags");
            });

            modelBuilder.Entity("ArticleCategory", b =>
            {
                b.HasOne("TekkenPortugal.WebApi.Models.Domain.Article", null)
                    .WithMany()
                    .HasForeignKey("ArticlesId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("TekkenPortugal.WebApi.Models.Domain.Category", null)
                    .WithMany()
                    .HasForeignKey("CategoriesId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("ArticleTag", b =>
            {
                b.HasOne("TekkenPortugal.WebApi.Models.Domain.Article", null)
                    .WithMany()
                    .HasForeignKey("ArticlesId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("TekkenPortugal.WebApi.Models.Domain.Tag", null)
                    .WithMany()
                    .HasForeignKey("TagsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}
